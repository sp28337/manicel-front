name: CI

on:
  push:
    branches: ["main", "dev"]
  pull_request:
    branches: ["main", "dev"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "20"

    - name: Install Dependencies
      run: npm ci

    - name: Lint
      run: npm run lint

    - name: Cache settings
      uses: actions/cache@v4
      with:
        path: |
          ~/.npm
          ${{ github.workspace }}/.next/cache
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
        restore-keys: |
          ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: manicel
    servises:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Connect to PostgresSQL
      run: |
        ssh -o StrictHostKeyChecking=no sp28337@109.73.207.195 -p 45515 "
          docker compose down &&
          docker compose up -d --build &&
        "

    - name: Deploy to server via SSH
      run: |
        ssh -o StrictHostKeyChecking=no sp28337@109.73.207.195 -p 45515 "
          cd manicel-front &&
          git checkout dev &&
          git pull &&
          cd .. &&
          docker compose down &&
          docker compose up -d --build &&
          docker system prune -af
        "